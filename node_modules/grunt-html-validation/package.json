{
  "name": "grunt-html-validation",
  "description": "W3C html validaton grunt plugin",
  "version": "0.1.2",
  "homepage": "https://github.com/praveen/grunt-html-validation",
  "author": {
    "name": "praveenvijayan",
    "email": "praveenv.vijayan@gmail.com",
    "url": "http://decodize.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/praveen/grunt-html-validation.git"
  },
  "bugs": {
    "url": "https://github.com/praveen/grunt-html-validation/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/praveen/grunt-html-validation/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "dependencies": {
    "w3cjs": "~0.1.9",
    "colors": "~0.6.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-html-validation\n\n> W3C html validaton grunt plugin. Validate all files in a directory automatically. \n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\n## The \"html_validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `html_validation` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.reset\nType: `Boolean`\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files - eg: sudo grunt validate --reset=true\n\n#### options.path\nType: `String`\nDefault value: `'validation-staus.json'`\n\nDefault file for storing validation information.\n\n### Usage Examples\n\n```js\nvalidation: {\n    options: {\n        reset: grunt.option('reset') || false\n    },\n    files: {\n        src: ['<%= yeoman.app %>/*.html', \n            '!<%= yeoman.app %>/index.html', \n            '!<%= yeoman.app %>/modules.html',\n            '!<%= yeoman.app %>/404.html']\n    }\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-html-validation@0.1.2",
  "dist": {
    "shasum": "5716a2a51404ae6fe9812728ff816b6a7d93df06"
  },
  "_from": "grunt-html-validation@",
  "_resolved": "https://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.2.tgz"
}
